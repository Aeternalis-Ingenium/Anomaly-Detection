name: ci

on: [push]

jobs:
  compilation:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: ["3.11.5"]

    steps:
    - uses: actions/checkout@v4.1.0

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4.7.0
      with:
        python-version: ${{ matrix.python-version }}
        cache: "pip"

    - name: Install package and dependencies
      run: |
        python3 -m pip install --upgrade pip setuptools wheel
        pip3 install .

    - name: Install linting dependencies
      run:  |
        python -m pip install --upgrade pip
        pip3 install "black==23.9.1" "isort==5.12.0" "mypy==1.5.1" "mypy-extensions==1.0.0" "colorama==0.4.6"

    - name: Lint with Black
      uses: psf/black@stable
      with:
        options: "--exclude=tests/"

    - name: Lint with Isort
      run: isort . --profile black

    - name: Lint with MyPy
      run: mypy . --pretty

    - name: Install linting dependencies
      run:  |
        python -m pip install --upgrade pip
        pip3 install "bandit==1.7.5" "pytest==7.4.2" "pytest-cov==4.1.0"

    - name: Test application's vulnerability with bandit
      run: bandit -c pyproject.toml -r .

    - name: Test with Pytest-Cov
      run: |
        pytest --cov --cov-report xml .

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3.1.4
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        fail_ci_if_error: true
        flags: anomaly_detection_tests
        name: codecov-umbrella
        verbose: true
